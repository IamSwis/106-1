we need to divide the screen in two sections
(section A and section B)

section A is the list
section B is the form

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\
    <title>Document</title>
    <link rel="stylesheet" href="./styles/mystyles.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<body>
    <h1 class="title">Task Manager</h1>
    <div class="container">
        <!-- Section A: Display Elements in a List -->
        <div id="section-a">
            <h2>Section A: List of Elements</h2>
            <ul id="element-list">
                <!-- List items will be added here -->
            </ul>
        </div>
        <!-- Toggle Button for the Form -->
        <button id="toggle-form-btn" class="btn btn-info mb-3">Double tap box to show form</button>

        <!-- Section B: Form for Adding Inputs -->
        <div id="section-b"><!--Refer to the css file for more information (this is where i set the form to be hidden when the page loads, the default behvaior uis to have it shown)-->
            <h2>Title of Task</h2>
            <form id="add-element-form">
                <input type="text" id="new-element" class="form-control mb-2" placeholder="What is the task?" required>

                <div class="mb-5">
                    <!-- Description input field -->
                    <textarea rows="3" id="new-description" class="form-control mb-2" placeholder="Enter description of task?" required></textarea>
                </div>
                
                <div>
                <!-- Start Date input field -->
                <input type="date" id="task-start-date" class="form-control mb-2" placeholder="Choose start date" required>
                </div>

                <div>
                    <!-- Status input field (Dropdown) -->
                    <select id="task-status" class="form-control mb-2" required>
                        <option value="">Select status</option>
                        <option value="planned">Generating COA</option>
                        <option value="COA">COA Chosen</option>
                        <option value="in_progress">In Progress</option>
                        <option value="completed">Completed</option>
                    </select>
                </div>
                <div>
                    <!-- Budget input field -->
                <input type="number" id="task-budget" class="form-control mb-2" placeholder="Enter budget in USD" required min="0">

                </div>
                
                <div>
                <!-- Color input field -->
                <input type="color" id="new-color" class="form-control form-control-color mb-2" placeholder="Choose color" required>
                </div>
                

                
                
                <button class="btn btn-primary" type="submit">Add to List</button>
                
                <!-- Date input field
        <input type="date" id="new-date" class="form-control mb-2" placeholder="Enter date" required>  -->
            </form>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.7.1.min.js" crossorigin="anonymous"></script>
    <script>
        // Ensure this script executes after the DOM is fully loaded
        document.addEventListener('DOMContentLoaded', function() {
            function handleFormSubmit(event) {
                event.preventDefault();// Prevents the default form submission behavior which is to reload and that can be annoying especially if youre typing something lengthy and the users page reloads. 
                const newElementInput = document.getElementById('new-element');
                const newDescriptionInput = document.getElementById('new-description');
                const startDateInput = document.getElementById('task-start-date');
                const statusInput = document.getElementById('task-status');
                const budgetInput = document.getElementById('task-budget');

                // Validate inputs
                if (!newElementInput.value.trim() || !newDescriptionInput.value.trim() || 
                !startDateInput.value || !statusInput.value || !budgetInput.value) {
                alert('Please fill in all fields correctly.');
                return;
                }

                // Additional validation for budget (ensure it's a positive number)
                if (parseFloat(budgetInput.value) < 0) {
                alert('Please enter a valid budget (positive number).');
                return;
                }
                // Assuming you want to include these new fields in your list item
                const list = document.getElementById('element-list');
                const listItem = document.createElement('li');
                listItem.classList.add("list-group-item");
                listItem.innerHTML = `<strong>${newElementInput.value.trim()}</strong>: ${newDescriptionInput.value.trim()}<br>
                                    Start Date: ${startDateInput.value}<br>
                                    Status: ${statusInput.options[statusInput.selectedIndex].text}<br>
                                    Budget: $${budgetInput.value}`;
                list.appendChild(listItem);

                // Clear the input fields for the next entry
                newElementInput.value = '';
                newDescriptionInput.value = '';
                startDateInput.value = '';
                statusInput.selectedIndex = 0;
                budgetInput.value = '';
        }
        // Automatically generate the current date and time from the locale browser timestamp
                const currentDateTime = new Date();
                const formattedDate = currentDateTime.toLocaleDateString(undefined, { year: 'numeric', month: 'long', day: 'numeric' });
                const formattedTime = currentDateTime.toLocaleTimeString(undefined, { hour: '2-digit', minute: '2-digit', second: '2-digit' });
        
                if (newElementValue && newDescriptionValue) {
                    // Add the new element, its description, and the current date and time to the list in Section A
                    const list = document.getElementById('element-list');
                    const listItem = document.createElement('li');
                    listItem.classList.add("list-group-item");
                    listItem.innerHTML = `<strong>${newElementValue}</strong>: ${newDescriptionValue}<br>Date: ${formattedDate} ${formattedTime}`;
                    list.appendChild(listItem);
                    
                    // Clear the input fields for the next entry
                    newElementInput.value = '';
                    newDescriptionInput.value = '';
                }
            
            // Function to toggle the form display
            function toggleForm() {
            const formSection = document.getElementById('section-b');
            formSection.style.display = formSection.style.display === 'none' ? 'block' : 'none';
            document.getElementById('toggle-form-btn').textContent = formSection.style.display === 'block' ? 'Hide Form' : 'Show Form';
        }
            // Attach the form submission event listener
            document.getElementById('add-element-form').addEventListener('submit', handleFormSubmit);
            document.getElementById('toggle-form-btn').addEventListener('dblclick', toggleForm);
        });
    </script>
</body>
</html>

